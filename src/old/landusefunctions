#USGS NLCD 2019 (downscaled to 1km a priori in google earth engine to speed up processing)
nlcd <- terra::rast(paste0(path_to_data, '/NLCD_2019/nlcd_HUC', huc2, '.tif'))
nlcd <- terra::project(nlcd, crs(wtd))

nlcd <- terra::crop(nlcd, basin)

#extract average land cover along stream channel
m <- c(0,NA, #ignore non-land pixels
       11,10,
       12,10,
       21,20, #developed
       22,20, #developed
       23,20, #developed
       24,20, #developed
       31,30,
       41,40,
       42,40,
       43,40,
       51,50,
       52,50,
       71,60, #there is no nlcd category 60 for some reason so we do this to later take a mean
       81,70, #cultivated
       82,70, #cultivated
       90,80,
       95,80)
rclmat <- matrix(m, ncol=2, byrow=TRUE)
nlcd <- terra::classify(nlcd, rclmat, include.lowest=TRUE)
nhd_nlcd <- terra::extract(nlcd, nhd, fun=function(x){return(mean(x, na.rm=T))})#'mean', na.rm=T)


nhd_df$nlcd_broad <- as.numeric(round(nhd_nlcd$landcover, -1)) #round to broad categories, i.e. forest, cultivated, urban, etc.
nhd_df$nlcd_broad <- ifelse(nhd_df$conus == 0, 0, nhd_df$nlcd_broad) #don't tabulate non-CONUS streams

#' Redistributes accumulated flow and drainage area for subset of reaches that are headwaters but not-ephemeral. See note and comments.
#'
#' @name redistributeUplandFlow
#'
#' @note the dQdX and catchment area are updated (using median ratios from first order) for a single scenario: headwater non_ephemeral streams that have 'upland ephemeral flow' given the Horton analysis.
#'
#' @param rivNetFin: nhd hydrography for a given huc4 basin
#' @param huc4: HUC4 basin code
#'
#' @import dplyr
#'
#' @return list of needed scaling results + rivnet hydrography model with updated dQdX when appropriate
redistributeUplandFlow <- function(rivNetFin, huc4){
  #Use median relative dQdX for 'trouble reaches' (using the first order)
  medianQratio <- 1-median(rivNetFin[rivNetFin$StreamOrde == 1,]$dQdX_cms / rivNetFin[rivNetFin$StreamOrde == 1,]$Q_cms) #ratio of increasing downstream flow
  medianARatio <- 1-median(rivNetFin[rivNetFin$StreamOrde == 1,]$AreaSqKm / rivNetFin[rivNetFin$StreamOrde == 1,]$TotDASqKm) #ratio of increasing downstream drainage area

  #REDISTRIBUTE ACCUMULATED FLOW (AND DRAINAGE AREA) FROM TERMINAL, NON-EPHEMERAL (domestic) STREAMS TO UPLAND SCALED EPHEMERAL STREAMS-----------------------------
  #first, get the 'trouble' reaches that this applies to
  rivNetFin$trouble <- ifelse(rivNetFin$perenniality == 'non_ephemeral' & rivNetFin$StreamOrde == 1 & (rivNetFin$dQdX_cms == rivNetFin$Q_cms), 1,0) #terminal non-ephemeral streams that need dQ re-mapped to account for upland ephemeral scaled contributions accumulated in these reaches

  #update trouble reach dQdX using the scaled Qbar as the fromNode discharge value
  rivNetFin$dQdX_cms <- ifelse(rivNetFin$trouble == 1, (rivNetFin$Q_cms - rivNetFin$Q_cms*medianQratio), rivNetFin$dQdX_cms) #cms
  rivNetFin$AreaSqKm <- ifelse(rivNetFin$trouble == 1, rivNetFin$AreaSqKm - rivNetFin$AreaSqKm*medianARatio, rivNetFin$AreaSqKm) #km2

  #Re-distribute this scaled accumulated flow/drainage area for every trouble reach's upland ephemeral network
  additionalQ_cms <- sum(rivNetFin[rivNetFin$trouble == 1,]$Q_cms*medianQratio, na.rm=T) #mean annual cms
  additionalA_km2 <- sum(rivNetFin[rivNetFin$trouble == 1,]$AreaSqKm*medianARatio, na.rm=T) #km2

  return(list('rivNet_scaled'=rivNetFin,
              'additionalQ_cms'=additionalQ_cms,
              'additionalA_km2' = additionalA_km2))
}
