huc2 <- '1111'
huc2 <- substr(huc4, 1, 2)
huc4 <- '1111'
huc2 <- substr(huc4, 1, 2)
NHD_HR_EROM <- st_read(dsn = dsnPath, layer = "NHDPlusEROMMA", quiet=TRUE) #mean annual flow table
library(sf)
NHD_HR_EROM <- st_read(dsn = dsnPath, layer = "NHDPlusEROMMA", quiet=TRUE) #mean annual flow table
#USGS NHD
dsnPath <- paste0(path_to_data, '\\HUC2_', huc2, '\\NHDPLUS_H_', huc4, '_HU4_GDB\\NHDPLUS_H_', huc4, '_HU4_GDB.gdb')
#############USER INPUTS-------------------
path_to_data <- 'C:\\Users\\craig\\OneDrive - University of Massachusetts\\Ongoing Projects\\CONUS_CO2_prep' #path to data repo (separate from code repo)
#USGS NHD
dsnPath <- paste0(path_to_data, '\\HUC2_', huc2, '\\NHDPLUS_H_', huc4, '_HU4_GDB\\NHDPLUS_H_', huc4, '_HU4_GDB.gdb')
NHD_HR_EROM <- st_read(dsn = dsnPath, layer = "NHDPlusEROMMA", quiet=TRUE) #mean annual flow table
NHD_HR_VAA <- st_read(dsn = dsnPath, layer = "NHDPlusFlowlineVAA", quiet=TRUE) #additional 'value-added' attributes
View(NHD_HR_VAA)
View(NHD_HR_EROM)
NHD_HR_ROMA <- st_read(dsn = dsnPath, layer='NHDPlusIncrROMA')
View(NHD_HR_ROMA)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
View(summ)
library(grwat)
i <- summ[5,]$GageIDMA
test <- readNWISstat(siteNumbers = i,
parameterCd = '00060', #discharge
startDate = '1970-10-01',
endDate = '2018-09-30')
test$Q_cms <- test$mean_va * 0.0283
test$day <- 1:nrow(test)
ggplot(test) +
geom_area(aes(day, Q_cms), fill = 'steelblue', color = 'black')
i <- summ[2,]$GageIDMA
test <- readNWISstat(siteNumbers = i,
parameterCd = '00060', #discharge
startDate = '1970-10-01',
endDate = '2018-09-30')
test$Q_cms <- test$mean_va * 0.0283
test$day <- 1:nrow(test)
ggplot(test) +
geom_area(aes(day, Q_cms), fill = 'steelblue', color = 'black')
}
View(test)
hdata = test %>%
mutate(Qbase = gr_baseflow(Q_cms, method = 'maxwell'))
# Visualize for 2020 year
ggplot(hdata) +
geom_area(aes(day, Q), fill = 'steelblue', color = 'black') +
geom_area(aes(day, Qbase), fill = 'orangered', color = 'black')
# Visualize for 2020 year
ggplot(hdata) +
geom_area(aes(day, Q_cms), fill = 'steelblue', color = 'black') +
geom_area(aes(day, Qbase), fill = 'orangered', color = 'black')
sum(hdata$Qbase)
sum(hdata$Qbase)/sum(hdata$Q_cms)
View(summ)
sum(round(hdata$Qbase,1))/sum(round(hdata$Q_cms,1))
View(summ)
sum(round(hdata$Qbase,2))/sum(round(hdata$Q_cms,2))
i <- summ[6,]$GageIDMA
test <- readNWISstat(siteNumbers = i,
parameterCd = '00060', #discharge
startDate = '1970-10-01',
endDate = '2018-09-30')
test$Q_cms <- test$mean_va * 0.0283
test$day <- 1:nrow(test)
hdata = test %>%
mutate(Qbase = gr_baseflow(Q_cms, method = 'maxwell'))
# Visualize for 2020 year
ggplot(hdata) +
geom_area(aes(day, Q_cms), fill = 'steelblue', color = 'black') +
geom_area(aes(day, Qbase), fill = 'orangered', color = 'black')
sum(hdata$Qbase)/sum(hdata$Q_cms)
sum(round(hdata$Qbase,2))/sum(round(hdata$Q_cms,2))
sum(round(hdata$Qbase,1))/sum(round(hdata$Q_cms,1))
sum(signif(hdata$Qbase,3))/sum(signif(hdata$Q_cms,3))
sum(signif(hdata$Qbase,2))/sum(signif(hdata$Q_cms,2))
sum(signif(hdata$Qbase,1))/sum(signif(hdata$Q_cms,1))
signif(hdata$Qbase)
signif(hdata$Qbase,2)
signif(hdata$Qbase,1)
sum(signif(hdata$Qbase,1))/sum(signif(hdata$Q_cms,1))
sum(signif(hdata$Qbase,0))/sum(signif(hdata$Q_cms,0))
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
t <- USGS_data[USGS_data$baseflow_fraction_maxwell == 0,]
View(t)
View(summ)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
View(summ)
5/0
0/5
View(test)
0/0
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
i <- summ[5,]$GageIDMA
test <- readNWISstat(siteNumbers = i,
parameterCd = '00060', #discharge
startDate = '1970-10-01',
endDate = '2018-09-30')
test$Q_cms <- test$mean_va * 0.0283
test$day <- 1:nrow(test)
test <- test %>% mutate(Qbase = gr_baseflow(Q_cms, method = 'maxwell'))
print(sum(test$Qbase)/sum(test$Q_cms))
# Visualize for 2020 year
ggplot(hdata) +
geom_area(aes(day, Q_cms), fill = 'steelblue', color = 'black') +
geom_area(aes(day, Qbase), fill = 'orangered', color = 'black')
hdata = test %>%
mutate(Qbase = gr_baseflow(Q_cms, method = 'maxwell'))
# Visualize for 2020 year
ggplot(hdata) +
geom_area(aes(day, Q_cms), fill = 'steelblue', color = 'black') +
geom_area(aes(day, Qbase), fill = 'orangered', color = 'black')
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
View(summ)
tar_visnetwork()
tar_visnetwork()
tar_visnetwork()
tar_make()
3/4
mean(c(0.75, 624/(624+48)))
0.975/(2-0..975)
0.975/(2-0.975)
(1-0.975)/(2-0.975)
tar_make()
tar_make()
tar_make()
tar_load(modelVerification)
View(modelVerification)
tar_load(USGS_data)
View(USGS_data)
t <- USGS_data[USGS_data$baseflow_fraction_maxwell == 0,]
View(t)
360/365
5/365
tar_make()
tar_make()
tar_load(EROM_data)
tar_load(USGS_data)
rivNetFin <- tar_read(combined_verification)
nhd_gages <- left_join(EROM_data, USGS_data, by=c('GageIDMA'='gageID')) %>%
tidyr::drop_na()
#VERIFY AGAINST BASEFLOW calculated previously-------------------
verifyDF <- left_join(nhd_gages, rivNetFin, by='NHDPlusID') %>%
tidyr::drop_na() %>%
mutate(baseflow_cf = ifelse(baseflow_fraction_maxwell < 0.05, 'ephemeral', 'perennial'),
model_cf = ifelse(perenniality == 'intermittent', 'perennial', perenniality))
summ <- verifyDF[verifyDF$baseflow_cf == 'ephemeral',]
View(summ)
View(summ)
tar_make()
View(summ)
View(summ)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
View(summ)
tar_make()
3/5
tar_make()
tar_load(nhdGages)
tar_load(USGS_data)
rivNetFin <- tar_load(rivNetFin)
rivNetFin <- tar_load(combined_verification)
library(cowplot)
theme_set(theme_classic())
#setup gages on NHD
nhd_gages <- left_join(nhdGages, usgs_data, by=c('GageIDMA'='gageID')) %>%
tidyr::drop_na()
usgs_data <- USGS_data
#setup gages on NHD
nhd_gages <- left_join(nhdGages, usgs_data, by=c('GageIDMA'='gageID')) %>%
tidyr::drop_na()
#VERIFY AGAINST BASEFLOW calculated previously-------------------
verifyDF <- left_join(nhd_gages, rivNetFin, by='NHDPlusID') %>%
tidyr::drop_na() %>%
mutate(baseflow_cf = ifelse(baseflow_fraction_maxwell < 0.05, 'ephemeral', 'perennial'),
model_cf = ifelse(perenniality == 'intermittent', 'perennial', perenniality))
View(nhd_gages)
rivNetFin <- combined_verification
#VERIFY AGAINST BASEFLOW calculated previously-------------------
verifyDF <- left_join(nhd_gages, rivNetFin, by='NHDPlusID') %>%
tidyr::drop_na() %>%
mutate(baseflow_cf = ifelse(baseflow_fraction_maxwell < 0.05, 'ephemeral', 'perennial'),
model_cf = ifelse(perenniality == 'intermittent', 'perennial', perenniality))
ggplot(verifyDF, aes(x=baseflow_fraction_maxwell, color=model_cf)) +
stat_ecdf()
ggplot(verifyDF, aes(x=baseflow_fraction_maxwell, color=model_cf)) +
stat_ecdf() +
xlim(0,1)
ggplot(verifyDF, aes(x=baseflow_fraction_lynehollick, color=model_cf)) +
stat_ecdf() +
xlim(0,1)
tar_make()
tar_visnetwork()
tar_make()
tar_make_clustermq(workers = 3)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
0.1/0.1
0/1
1/0
0/3
View(summ)
1/0
0/0
test
View(test)
View(verifyDF)
tar_load(modelVerification)
0/0
0/1
round(0.023, 1)
round(0.049, 1)
round(0.050, 1)
round(0.055, 1)
tar_load(EROM_data)
tar_load(USGS_data)
rivNetFin <- tar_read(combined_verification)
nhd_gages <- left_join(EROM_data, USGS_data, by=c('GageIDMA'='gageID')) %>%
tidyr::drop_na()
#VERIFY AGAINST BASEFLOW calculated previously-------------------
verifyDF <- left_join(nhd_gages, rivNetFin, by='NHDPlusID') %>%
tidyr::drop_na() %>%
mutate(baseflow_cf = ifelse(baseflow_fraction_maxwell < 0.05, 'ephemeral', 'perennial'),
model_cf = ifelse(perenniality == 'intermittent', 'perennial', perenniality))
summ <- verifyDF[verifyDF$baseflow_cf == 'ephemeral',]
i <- summ[1,]$GageIDMA
test <- readNWISstat(siteNumbers = i,
parameterCd = '00060', #discharge
startDate = '1970-10-01',
endDate = '2018-09-30')
test$Q_cms <- test$mean_va * 0.0283
test$day <- 1:nrow(test)
test <- test %>% mutate(Qbase = gr_baseflow(Q_cms, method = 'maxwell'))
View(test)
round(0.01,1)
print(sum(round(test$Qbase,2)*60*60*24)/sum(round(test$Q_cms,2)*60*60*24))
for(i in summ$GageIDMA){
test <- readNWISstat(siteNumbers = i,
parameterCd = '00060', #discharge
startDate = '1970-10-01',
endDate = '2018-09-30')
test$Q_cms <- test$mean_va * 0.0283
test$day <- 1:nrow(test)
test <- test %>% mutate(Qbase = gr_baseflow(Q_cms, method = 'maxwell'))
print(sum(round(test$Qbase,2)*60*60*24)/sum(round(test$Q_cms,2)*60*60*24))
# Visualize for 2020 year
listPlots[[i]] <- ggplot(test) +
geom_area(aes(day, Q_cms), fill = 'steelblue', color = 'black')
}
rm(i)
listPlots <- list()
for(i in summ$GageIDMA){
test <- readNWISstat(siteNumbers = i,
parameterCd = '00060', #discharge
startDate = '1970-10-01',
endDate = '2018-09-30')
test$Q_cms <- test$mean_va * 0.0283
test$day <- 1:nrow(test)
test <- test %>% mutate(Qbase = gr_baseflow(Q_cms, method = 'maxwell'))
print(sum(round(test$Qbase,2)*60*60*24)/sum(round(test$Q_cms,2)*60*60*24))
# Visualize for 2020 year
listPlots[[i]] <- ggplot(test) +
geom_area(aes(day, Q_cms), fill = 'steelblue', color = 'black')
}
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
View(test)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
View(summ)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
sum(test$Qbase*60*60*24)/sum(test$Q_cms*60*60*24))
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
tar_visnetwork()
tar_visnetwork()
tar_make_clustermq(workers = 4)
tar_visnetwork()
#SETUP STATIC BRANCHING----------------------------
#Each HUC4 branch gets it's own branch
mapped <- tar_map(
unlist=FALSE, #to facilitate tar_combine within a mapping scheme (see below)
values = tibble(
method_function = rlang::syms("extractWTD"),
huc4 = c("1101", '1102', '1103', '1104', '1105', '1106', '1107', '1108', '1109', '1110', '1111', '1112', '1113', '1114',
'1201', '1202', '1203', '1204', '1205', '1206', '1207', '1208', '1209', '1210', '1211',
'0101', '0102', '0103', '0104', '0105', '0106', '0107', '0108', '0109', '0110')
),
names = "huc4",
tar_target(extractedRivNet, method_function(path_to_data, huc4)), #extract water table depths along the river reaches
tar_target(rivNetFin, getPerenniality(extractedRivNet, huc4, threshold, error, 'mean', widAHG)), #calculate perenniality using mean water table depth along the reach
tar_target(results, collectResults(rivNetFin, huc4))) #aggregate HUC4 results
library(tarchetypes)
#SETUP STATIC BRANCHING----------------------------
#Each HUC4 branch gets it's own branch
mapped <- tar_map(
unlist=FALSE, #to facilitate tar_combine within a mapping scheme (see below)
values = tibble(
method_function = rlang::syms("extractWTD"),
huc4 = c("1101", '1102', '1103', '1104', '1105', '1106', '1107', '1108', '1109', '1110', '1111', '1112', '1113', '1114',
'1201', '1202', '1203', '1204', '1205', '1206', '1207', '1208', '1209', '1210', '1211',
'0101', '0102', '0103', '0104', '0105', '0106', '0107', '0108', '0109', '0110')
),
names = "huc4",
tar_target(extractedRivNet, method_function(path_to_data, huc4)), #extract water table depths along the river reaches
tar_target(rivNetFin, getPerenniality(extractedRivNet, huc4, threshold, error, 'mean', widAHG)), #calculate perenniality using mean water table depth along the reach
tar_target(results, collectResults(rivNetFin, huc4))) #aggregate HUC4 results
mapped[[2]]
View(mapped)
trainingData_01 <- readRDS("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/cache/training/trainingData_01.rds")
View(trainingData_01)
View(mapped)
tar_visnetwork()
tar_visnetwork()
tar_make()
tar_load(combined_rivnet)
tar_load(combined_rivnets)
nhdGages <- tar_read(nhdGages)
usgs_data <- tar_read(USGS_data)
rivNetFin <- tar_read(combined_rivnets)
theme_set(theme_classic())
#setup gages on NHD
nhd_gages <- left_join(nhdGages, usgs_data, by=c('GageIDMA'='gageID')) %>%
tidyr::drop_na()
#VERIFY AGAINST BASEFLOW calculated previously-------------------
verifyDF <- left_join(nhd_gages, rivNetFin, by='NHDPlusID') %>%
tidyr::drop_na() %>%
mutate(baseflow_cf = ifelse(baseflow_fraction_maxwell < 0.05, 'ephemeral', 'perennial'),
model_cf = ifelse(perenniality == 'intermittent', 'perennial', perenniality))
cm <- as.data.frame(caret::confusionMatrix(factor(verifyDF$model_cf), factor(verifyDF$baseflow_cf))$table)
View(verifyDF)
View(verifyDF)
tar_make()
tar_load(modelVerification)
View(modelVerification)
tar_make()
View(modelVerification)
tar_make()
5/8
hist(modelVerification$baseflow_fraction_chapman)
hist(modelVerification$baseflow_fraction_chapman_singh)
hist(modelVerification$baseflow_fraction_maxwell)
hist(modelVerification$baseflow_fraction_lynehollick)
hist(modelVerification$baseflow_fraction_lynehollick_singh)
tar_make()
View(modelVerification)
tar_make()
tar_make()
tar_make()
tar_load(modelVerification)
View(modelVerification)
tar_load(modelVerification)
tar_make()
4/7
hist(modelVerification$baseflow_fraction_maxwell)
summary(modelVerification$baseflow_fraction_maxwell)
summary(modelVerification$baseflow_fraction_lynehollick)
summary(modelVerification$baseflow_fraction_lynehollick_singh)
tar_make()
tar_make()
2/3
625/675
mean(c(67,93))
627/678
verifyDF <- modelVerification
tar_make()
2/3
1/(21+1+68)
553/(553+29+3)
5/365
tar_make()
tar_load(modelVerification)
View(modelVerification)
tar_make()
tar_make()
tar_make()
tar_make()
tar_load(modelVerification)
View(modelVerification)
1/365
tar_make()
tar_make()
30/365
tar_make()
1/12
View(modelVerification)
t <- modelVerification[modelVerification$model_cf == 'intermittent',]
View(t)
t <- modelVerification[modelVerification$perenniality == 'intermittent',]
View(t)
tar_make()
584/(584+4+34)
365*0.083
all(c(1,2,3,4,5) < 3)
any(c(1,2,3,4,5) < 3)
View(modelVerification)
View(modelVerification)
any(c(1,2,3,4,5) > 10)
View(modelVerification)
tar_load(modelVerification)
t <- modelVerification[modelVerification$baseflow_cf == 'intermittent']
t <- modelVerification[modelVerification$baseflow_cf == 'intermittent',]
View(t)
586/(586+16+34+4+1+37)
mean(c(0.67, 0, 6))
mean(c(0.67, 0, 584/(584+38)))
tar_visnetwork()
tar_make()
tar_make()
tar_visnetwork()
tar_make()
tar_visnetwork
tar_visnetwork()
tar_visnetwork()
tar_load(rivNetFin)
tar_load(combined_rivnets)
View(combined_rivnets)
#SETUP STATIC BRANCHING----------------------------
#Each HUC4 branch gets it's own branch
mapped <- tar_map(
unlist=FALSE, #to facilitate tar_combine within a mapping scheme (see below)
values = tibble(
method_function = rlang::syms("extractWTD"),
huc4 = c('0101', '0102', '0103', '0104', '0105', '0106', '0107', '0108', '0109', '0110',
"1101", '1102', '1103', '1104', '1105', '1106', '1107', '1108', '1109', '1110', '1111', '1112', '1113', '1114',
'1201', '1202', '1203', '1204', '1205', '1206', '1207', '1208', '1209', '1210', '1211'),
# '1301', '1302', '1303', '1304', '1305', '1306', '1307', '1308', '1309',
#  '1601', '1602', '1603', '1604', '1605', '1606')
),
names = "huc4",
tar_target(extractedRivNet, method_function(path_to_data, huc4)), #extract water table depths along the river reaches
tar_target(rivNetFin, getPerenniality(extractedRivNet, huc4, threshold, error, 'mean', widAHG)), #calculate perenniality using mean water table depth along the reach
tar_target(rivNetFin_verify, getRivNetverify(rivNetFin, nhdGages, USGS_data)),
tar_target(results, collectResults(rivNetFin, huc4))) #aggregate HUC4 results
View(mapped)
tar_visnetwork()
tar_visnetwork(targets_only = T)
tar_visnetwork()
tar_visnetwork()
tar_prune()
tar_visnetwork(targets_only = T)
tar_make_clustermq(workers=4)
tar_load(rivNetFin_0101)
tar_load(rivNetFin_1205)
tar_load(rivNetFin_verify_1205)
tar_load(rivNetFin_verify_0101)
tar_visnetwork()
nrow(rivNetFin_verify_1205)
View(rivNetFin_verify_0101)
View(rivNetFin_verify_1205)
View(rivNetFin_verify_1205)
tar_make_clustermq(workers=4)
tar_visnetwork()
tar_load(combined_verify)
View(combined_verify)
tar_visnetwork()
tar_make()
tar_load(combined_verify)
tar_load(combined_results)
View(combined_results)
sum(combined_results$totalephmeralQ)/sum(combined_results$totalperennialQ+combined_results$totalephmeralQ+combined_results$totalintermittentQ)
mean(combined_results$percQ_eph)
mean(combined_results$percSA_eph)
tar_validate()
tar_visnetwork(targets_only = T)
tar_make_clustermq(workers=5)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
library(readr)
write_rds(listPlots, 'cache/true_ephemerals.rds')
listPlots
85/87
2/87
tar_make()
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
listPlots
listPlots
View(summ)
View(summ)
tar_make()
listPlots
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
listPlots
tar_make()
tar_make()
tar_make()
tar_make_clustermq(workers=4)
library(targets)
tar_make()
tar_make_clustermq(workers=4)
tar_make_clustermq(workers=4)
tar_make_clustermq(workers=4)
tar_make()
tar_make()
tar_make()
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
source("C:/Users/craig/OneDrive - University of Massachusetts/Ongoing Projects/CONUS_ephemeral/src/hydrographCheck.R", echo=TRUE)
write_rds(listPlots, 'cache/false_positives.rds')
listPlots[[10]]
listPlots[[12]]
listPlots[[13]]
(743+2+5)/(743+2+5+89)
2/3
tar_make()
750/(750+89)
752/(750+89+3)
